### YamlMime:UniversalReference
items:
  - uid: '@azure/event-hubs.EventData'
    name: EventData
    fullName: EventData
    children:
      - '@azure/event-hubs.EventData.annotations'
      - '@azure/event-hubs.EventData.applicationProperties'
      - '@azure/event-hubs.EventData.body'
      - '@azure/event-hubs.EventData.enqueuedTimeUtc'
      - '@azure/event-hubs.EventData.fromAmqpMessage'
      - '@azure/event-hubs.EventData.header'
      - '@azure/event-hubs.EventData.lastEnqueuedOffset'
      - '@azure/event-hubs.EventData.lastEnqueuedTime'
      - '@azure/event-hubs.EventData.lastSequenceNumber'
      - '@azure/event-hubs.EventData.offset'
      - '@azure/event-hubs.EventData.partitionKey'
      - '@azure/event-hubs.EventData.properties'
      - '@azure/event-hubs.EventData.retrievalTime'
      - '@azure/event-hubs.EventData.sequenceNumber'
      - '@azure/event-hubs.EventData.toAmqpMessage'
    langs:
      - typeScript
    type: module
    summary: Describes the methods on the EventData interface.
    package: '@azure/event-hubs'
    module: EventData
  - uid: '@azure/event-hubs.EventData.annotations'
    name: annotations
    fullName: annotations
    children: []
    langs:
      - typeScript
    type: property
    summary: '{AmqpMessageAnnotations} [annotations] The amqp message attributes.'
    optional: true
    syntax:
      content: 'annotations?: EventHubMessageAnnotations'
      return:
        type:
          - '@azure/event-hubs.EventHubMessageAnnotations'
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventData.applicationProperties'
    name: applicationProperties
    fullName: applicationProperties
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {Dictionary<any>} [applicationProperties] The application specific
      properties.
    optional: true
    syntax:
      content: 'applicationProperties?: Dictionary<any>'
      return:
        type:
          - Dictionary<any>
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventData.body'
    name: body
    fullName: body
    children: []
    langs:
      - typeScript
    type: property
    summary: '{any} body - The message body that needs to be sent or is received.'
    syntax:
      content: 'body: any'
      return:
        type:
          - any
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventData.enqueuedTimeUtc'
    name: enqueuedTimeUtc
    fullName: enqueuedTimeUtc
    children: []
    langs:
      - typeScript
    type: property
    summary: '{Date} [enqueuedTimeUtc] The enqueued time of the event.'
    optional: true
    syntax:
      content: 'enqueuedTimeUtc?: Date'
      return:
        type:
          - Date
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventData.fromAmqpMessage'
    name: fromAmqpMessage(Message)
    children: []
    type: function
    langs:
      - typeScript
    summary: Converts the AMQP message to an EventData.
    syntax:
      content: 'function fromAmqpMessage(msg: Message)'
      parameters:
        - id: msg
          type:
            - Message
          description: |
            The AMQP message that needs to be converted to EventData.
      return:
        type:
          - '@azure/event-hubs.EventData'
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventData.header'
    name: header
    fullName: header
    children: []
    langs:
      - typeScript
    type: property
    summary: '{MessageHeader} [header] - The message headers.'
    optional: true
    syntax:
      content: 'header?: MessageHeader'
      return:
        type:
          - MessageHeader
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventData.lastEnqueuedOffset'
    name: lastEnqueuedOffset
    fullName: lastEnqueuedOffset
    children: []
    langs:
      - typeScript
    type: property
    summary: '{string} [lastEnqueuedOffset] The offset of the last enqueued event.'
    optional: true
    syntax:
      content: 'lastEnqueuedOffset?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventData.lastEnqueuedTime'
    name: lastEnqueuedTime
    fullName: lastEnqueuedTime
    children: []
    langs:
      - typeScript
    type: property
    summary: '{Date} [lastEnqueuedTime] The enqueued UTC time of the last event.'
    optional: true
    syntax:
      content: 'lastEnqueuedTime?: Date'
      return:
        type:
          - Date
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventData.lastSequenceNumber'
    name: lastSequenceNumber
    fullName: lastSequenceNumber
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {number} [lastSequenceNumber] The last sequence number of the event within
      the partition stream of the Event Hub.
    optional: true
    syntax:
      content: 'lastSequenceNumber?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventData.offset'
    name: offset
    fullName: offset
    children: []
    langs:
      - typeScript
    type: property
    summary: '{string} [offset] The offset of the event.'
    optional: true
    syntax:
      content: 'offset?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventData.partitionKey'
    name: partitionKey
    fullName: partitionKey
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {string | null} [partitionKey] If specified EventHub will hash this to a
      partitionId.

      It guarantees that messages end up in a specific partition on the event
      hub.
    optional: true
    syntax:
      content: 'partitionKey?: string | null'
      return:
        type:
          - string | null
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventData.properties'
    name: properties
    fullName: properties
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {AmqpMessageProperties} [properties] The predefined AMQP properties like
      message_id, correlation_id, reply_to, etc.
    optional: true
    syntax:
      content: 'properties?: MessageProperties'
      return:
        type:
          - MessageProperties
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventData.retrievalTime'
    name: retrievalTime
    fullName: retrievalTime
    children: []
    langs:
      - typeScript
    type: property
    summary: '{Date} [retrievalTime] The time when the runtime info was retrieved'
    optional: true
    syntax:
      content: 'retrievalTime?: Date'
      return:
        type:
          - Date
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventData.sequenceNumber'
    name: sequenceNumber
    fullName: sequenceNumber
    children: []
    langs:
      - typeScript
    type: property
    summary: '{number} [sequenceNumber] The sequence number of the event.'
    optional: true
    syntax:
      content: 'sequenceNumber?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/event-hubs'
  - uid: '@azure/event-hubs.EventData.toAmqpMessage'
    name: toAmqpMessage(EventData)
    children: []
    type: function
    langs:
      - typeScript
    summary: Converts an EventData object to an AMQP message.
    syntax:
      content: 'function toAmqpMessage(data: EventData)'
      parameters:
        - id: data
          type:
            - '@azure/event-hubs.EventData'
          description: |
            The EventData object that needs to be converted to an AMQP message.
      return:
        type:
          - Message
    package: '@azure/event-hubs'
references:
  - uid: '@azure/event-hubs.EventHubMessageAnnotations'
    name: EventHubMessageAnnotations
    spec.typeScript:
      - name: EventHubMessageAnnotations
        fullName: EventHubMessageAnnotations
        uid: '@azure/event-hubs.EventHubMessageAnnotations'
  - uid: '@azure/event-hubs.EventData'
    name: EventData
    spec.typeScript:
      - name: EventData
        fullName: EventData
        uid: '@azure/event-hubs.EventData'
  - uid: '@azure/event-hubs.EventData.annotations'
    name: annotations
  - uid: '@azure/event-hubs.EventData.applicationProperties'
    name: applicationProperties
  - uid: '@azure/event-hubs.EventData.body'
    name: body
  - uid: '@azure/event-hubs.EventData.enqueuedTimeUtc'
    name: enqueuedTimeUtc
  - uid: '@azure/event-hubs.EventData.fromAmqpMessage'
    name: fromAmqpMessage
  - uid: '@azure/event-hubs.EventData.header'
    name: header
  - uid: '@azure/event-hubs.EventData.lastEnqueuedOffset'
    name: lastEnqueuedOffset
  - uid: '@azure/event-hubs.EventData.lastEnqueuedTime'
    name: lastEnqueuedTime
  - uid: '@azure/event-hubs.EventData.lastSequenceNumber'
    name: lastSequenceNumber
  - uid: '@azure/event-hubs.EventData.offset'
    name: offset
  - uid: '@azure/event-hubs.EventData.partitionKey'
    name: partitionKey
  - uid: '@azure/event-hubs.EventData.properties'
    name: properties
  - uid: '@azure/event-hubs.EventData.retrievalTime'
    name: retrievalTime
  - uid: '@azure/event-hubs.EventData.sequenceNumber'
    name: sequenceNumber
  - uid: '@azure/event-hubs.EventData.toAmqpMessage'
    name: toAmqpMessage
