/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource, CloudError } from "ms-rest-azure-js";
import * as msRest from "ms-rest-js";

export { BaseResource, CloudError };


/**
 * @interface
 * An interface representing GetQueueResponseAuthor.
 * The author that created this resource
 *
 */
export interface GetQueueResponseAuthor {
  /**
   * @member {string} [name] The name of the author that created this resource
   */
  name?: string;
}

/**
 * @interface
 * An interface representing GetQueueResponseLink.
 * TODO: Add description
 *
 */
export interface GetQueueResponseLink {
  /**
   * @member {string} [rel] TODO: Add description
   */
  rel?: string;
  /**
   * @member {string} [href] TODO: Add description
   */
  href?: string;
}

/**
 * @interface
 * An interface representing GetQueueResponseContentQueueDescriptionCountDetails.
 * TODO: Add description
 *
 */
export interface GetQueueResponseContentQueueDescriptionCountDetails {
  /**
   * @member {number} [activeMessageCount] TODO: Add description
   */
  activeMessageCount?: number;
  /**
   * @member {number} [deadLetterMessageCount] TODO: Add description
   */
  deadLetterMessageCount?: number;
  /**
   * @member {number} [scheduledMessageCount] TODO: Add description
   */
  scheduledMessageCount?: number;
  /**
   * @member {number} [transferMessageCount] TODO: Add description
   */
  transferMessageCount?: number;
  /**
   * @member {number} [transferDeadLetterMessageCount] TODO: Add description
   */
  transferDeadLetterMessageCount?: number;
}

/**
 * @interface
 * An interface representing GetQueueResponseContentQueueDescription.
 * TODO: Add description
 *
 */
export interface GetQueueResponseContentQueueDescription {
  /**
   * @member {string} [lockDuration] TODO: Add description
   */
  lockDuration?: string;
  /**
   * @member {number} [maxSizeInMegabytes] TODO: Add description
   */
  maxSizeInMegabytes?: number;
  /**
   * @member {boolean} [requiresDuplicateDetection] TODO: Add description
   */
  requiresDuplicateDetection?: boolean;
  /**
   * @member {boolean} [requiresSession] TODO: Add description
   */
  requiresSession?: boolean;
  /**
   * @member {string} [defaultMessageTimeToLive] TODO: Add description
   */
  defaultMessageTimeToLive?: string;
  /**
   * @member {boolean} [deadLetteringOnMessageExpiration] TODO: Add description
   */
  deadLetteringOnMessageExpiration?: boolean;
  /**
   * @member {string} [duplicateDetectionHistoryTimeWindow] TODO: Add
   * description
   */
  duplicateDetectionHistoryTimeWindow?: string;
  /**
   * @member {number} [maxDeliveryCount] TODO: Add description
   */
  maxDeliveryCount?: number;
  /**
   * @member {boolean} [enableBatchedOperations] TODO: Add description
   */
  enableBatchedOperations?: boolean;
  /**
   * @member {number} [sizeInBytes] TODO: Add description
   */
  sizeInBytes?: number;
  /**
   * @member {number} [messageCount] TODO: Add description
   */
  messageCount?: number;
  /**
   * @member {boolean} [isAnonymousAccessible] TODO: Add description
   */
  isAnonymousAccessible?: boolean;
  /**
   * @member {string} [status] TODO: Add description
   */
  status?: string;
  /**
   * @member {string} [createdAt] TODO: Add description
   */
  createdAt?: string;
  /**
   * @member {string} [updatedAt] TODO: Add description
   */
  updatedAt?: string;
  /**
   * @member {string} [accessedAt] TODO: Add description
   */
  accessedAt?: string;
  /**
   * @member {boolean} [supportOrdering] TODO: Add description
   */
  supportOrdering?: boolean;
  /**
   * @member {GetQueueResponseContentQueueDescriptionCountDetails}
   * [countDetails] TODO: Add description
   */
  countDetails?: GetQueueResponseContentQueueDescriptionCountDetails;
  /**
   * @member {string} [autoDeleteOnIdle] TODO: Add description
   */
  autoDeleteOnIdle?: string;
  /**
   * @member {boolean} [enablePartitioning] TODO: Add description
   */
  enablePartitioning?: boolean;
  /**
   * @member {string} [entityAvailabilityStatus] TODO: Add description
   */
  entityAvailabilityStatus?: string;
  /**
   * @member {boolean} [enableExpress] TODO: Add description
   */
  enableExpress?: boolean;
}

/**
 * @interface
 * An interface representing GetQueueResponseContent.
 * TODO: Add description
 *
 */
export interface GetQueueResponseContent {
  /**
   * @member {string} [type] TODO: Add description
   */
  type?: string;
  /**
   * @member {GetQueueResponseContentQueueDescription} [queueDescription] TODO:
   * Add description
   */
  queueDescription?: GetQueueResponseContentQueueDescription;
}

/**
 * @interface
 * An interface representing GetQueueResponse.
 * The response from a GetQueue operation
 *
 */
export interface GetQueueResponse {
  /**
   * @member {string} id The ID Of the Queue
   */
  id: string;
  /**
   * @member {string} [title] The name of the resource
   */
  title?: string;
  /**
   * @member {string} published The timestamp for when this resource was
   * published
   */
  published: string;
  /**
   * @member {string} [updated] The timestamp for when this resource was last
   * updated
   */
  updated?: string;
  /**
   * @member {GetQueueResponseAuthor} author The author that created this
   * resource
   */
  author: GetQueueResponseAuthor;
  /**
   * @member {GetQueueResponseLink} link TODO: Add description
   */
  link: GetQueueResponseLink;
  /**
   * @member {GetQueueResponseContent} content TODO: Add description
   */
  content: GetQueueResponseContent;
}

/**
 * @interface
 * An interface representing CreateQueueBodyContentQueueDescription.
 * TODO: Add description
 *
 */
export interface CreateQueueBodyContentQueueDescription {
  /**
   * @member {string} [lockDuration] TODO: Add description. Default value:
   * 'PT1M' .
   */
  lockDuration?: string;
  /**
   * @member {number} [maxSizeInMegabytes] TODO: Add description. Default
   * value: 1024 .
   */
  maxSizeInMegabytes?: number;
  /**
   * @member {boolean} [requiresDuplicateDetection] TODO: Add description.
   * Default value: false .
   */
  requiresDuplicateDetection?: boolean;
  /**
   * @member {boolean} [requiresSession] TODO: Add description. Default value:
   * false .
   */
  requiresSession?: boolean;
  /**
   * @member {boolean} [deadLetteringOnMessageExpiration] TODO: Add
   * description. Default value: false .
   */
  deadLetteringOnMessageExpiration?: boolean;
  /**
   * @member {number} [maxDeliveryCount] TODO: Add description. Default value:
   * 10 .
   */
  maxDeliveryCount?: number;
  /**
   * @member {boolean} [enableBatchedOperations] TODO: Add description. Default
   * value: true .
   */
  enableBatchedOperations?: boolean;
  /**
   * @member {string} [status] TODO: Add description. Default value: 'Active' .
   */
  status?: string;
  /**
   * @member {boolean} [enablePartitioning] TODO: Add description. Default
   * value: false .
   */
  enablePartitioning?: boolean;
}

/**
 * @interface
 * An interface representing CreateQueueBodyContent.
 * TODO: Add description
 *
 */
export interface CreateQueueBodyContent {
  /**
   * @member {string} [type] TODO: Add description
   */
  type?: string;
  /**
   * @member {CreateQueueBodyContentQueueDescription} [queueDescription] TODO:
   * Add description
   */
  queueDescription?: CreateQueueBodyContentQueueDescription;
}

/**
 * @interface
 * An interface representing CreateQueueBody.
 * The response from a CreateQueue operation.
 *
 */
export interface CreateQueueBody {
  /**
   * @member {CreateQueueBodyContent} [content] TODO: Add description
   */
  content?: CreateQueueBodyContent;
}


/**
 * Contains response data for the get operation.
 */
export type QueueGetResponse = GetQueueResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GetQueueResponse;
    };
};

/**
 * Contains response data for the create operation.
 */
export type QueueCreateResponse = GetQueueResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GetQueueResponse;
    };
};
